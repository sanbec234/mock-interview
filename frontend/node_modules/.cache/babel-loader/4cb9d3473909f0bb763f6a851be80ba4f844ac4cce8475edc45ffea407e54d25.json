{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohan\\\\Downloads\\\\mock-interview-main-working\\\\mock-interview-main-working\\\\frontend\\\\src\\\\pages\\\\login-page\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport './login-page.css'; // Custom CSS for styling\nimport Header from '../../components/Header/Header'; // Header component\nimport Footer from '../../components/Footer/Footer'; // Footer component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState(''); // State for email input\n  const [password, setPassword] = useState(''); // State for password input\n  const [userType, setUserType] = useState(''); // State for user type selection\n  const [isSubmitting, setIsSubmitting] = useState(false); // State to manage form submission\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n\n  // Handle the form submission\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent default form submission\n    if (isSubmitting) return; // Prevent multiple submissions\n\n    // Basic validation for the email, password, and user type fields\n    if (!email.trim() || !password.trim() || !userType.trim()) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    setIsSubmitting(true);\n    const payload = {\n      email,\n      password,\n      userType\n    }; // Set the form submission state to true (loading)\n    try {\n      // Send login credentials to the Flask API\n      const response = await fetch('http://host.docker.internal:5000/',\n      // Corrected endpoint\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload) // Ensures cookies are included\n      });\n      if (response.status === 200) {\n        alert('Login successful!'); // Show success message\n\n        // Store the email in local storage\n        localStorage.setItem('userEmail', email);\n\n        // Check user type and navigate accordingly\n        if (userType === 'admin') {\n          navigate('/admin'); // Redirect to admin dashboard\n        } else {\n          navigate('/dashborad'); // Redirect to student dashboard\n        }\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n\n      // Display meaningful error messages\n      if (error.response && error.response.data && error.response.data.message) {\n        alert(error.response.data.message); // Show the error message from the server\n      } else {\n        alert('An error occurred. Please try again.');\n      }\n    } finally {\n      setIsSubmitting(false); // Reset the form submission state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group radio-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"admin\",\n                checked: userType === 'admin',\n                onChange: e => setUserType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), \"Admin\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"student\",\n                checked: userType === 'student',\n                onChange: e => setUserType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), \"Student\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"login-button\",\n          children: isSubmitting ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => navigate('/sign-up') // Redirect to signup page\n          ,\n          className: \"login-button\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"C/R0WMH2rE96k0tmJouL2wbouC0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Header","Footer","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","userType","setUserType","isSubmitting","setIsSubmitting","navigate","handleLogin","e","preventDefault","trim","alert","payload","response","fetch","method","headers","body","JSON","stringify","status","localStorage","setItem","error","console","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","checked","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mohan/Downloads/mock-interview-main-working/mock-interview-main-working/frontend/src/pages/login-page/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For navigation\nimport './login-page.css'; // Custom CSS for styling\nimport Header from '../../components/Header/Header'; // Header component\nimport Footer from '../../components/Footer/Footer'; // Footer component\n\nconst LoginPage: React.FC = () => {\n  const [email, setEmail] = useState<string>(''); // State for email input\n  const [password, setPassword] = useState<string>(''); // State for password input\n  const [userType, setUserType] = useState<string>(''); // State for user type selection\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false); // State to manage form submission\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n\n  // Handle the form submission\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault(); // Prevent default form submission\n    if (isSubmitting) return; // Prevent multiple submissions\n\n    // Basic validation for the email, password, and user type fields\n    if (!email.trim() || !password.trim() || !userType.trim()) {\n      alert('Please fill in all fields.');\n      return;\n    }\n\n    setIsSubmitting(true);\n    const payload = {\n      email,\n      password,\n      userType\n    }; // Set the form submission state to true (loading)\n    try {\n      // Send login credentials to the Flask API\n      const response = await fetch(\n        'http://host.docker.internal:5000/', // Corrected endpoint\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload), // Ensures cookies are included\n        }\n      );\n\n      if (response.status === 200) {\n        alert('Login successful!'); // Show success message\n\n        // Store the email in local storage\n        localStorage.setItem('userEmail', email);\n\n        // Check user type and navigate accordingly\n        if (userType === 'admin') {\n          navigate('/admin'); // Redirect to admin dashboard\n        } else {\n          navigate('/dashborad'); // Redirect to student dashboard\n        }\n      }\n    } catch (error: any) {\n      console.error('Login failed:', error);\n\n      // Display meaningful error messages\n      if (error.response && error.response.data && error.response.data.message) {\n        alert(error.response.data.message); // Show the error message from the server\n      } else {\n        alert('An error occurred. Please try again.');\n      }\n    } finally {\n      setIsSubmitting(false); // Reset the form submission state\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <Header /> {/* Custom Header component */}\n      <div className=\"login-container\">\n        <h2>Login</h2>\n        <form onSubmit={handleLogin} className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n            />\n          </div>\n          <div className=\"form-group radio-buttons\">\n            <label>User Type</label>\n            <div className=\"radio-options\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"admin\"\n                  checked={userType === 'admin'}\n                  onChange={(e) => setUserType(e.target.value)}\n                />\n                Admin\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"student\"\n                  checked={userType === 'student'}\n                  onChange={(e) => setUserType(e.target.value)}\n                />\n                Student\n              </label>\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"login-button\"\n          >\n            {isSubmitting ? 'Logging in...' : 'Login'}\n          </button>\n          <br />\n          <br />\n          <button\n            type=\"button\"\n            onClick={() => navigate('/sign-up')} // Redirect to signup page\n            className=\"login-button\"\n          >\n            Sign Up\n          </button>\n        </form>\n      </div>\n      <Footer /> {/* Custom Footer component */}\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}